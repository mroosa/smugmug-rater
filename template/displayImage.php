<?php
$curImg = isset($_REQUEST['i']) ? $_REQUEST['i'] : 0;
$dir = isset($_REQUEST['d']) ? $_REQUEST['d'] : '';
$dir = (int)$dir===-1 ? "../" : $dir;

// This file is generated by Composer
require_once $dir . 'vendor/autoload.php';

// Optional, but definitely nice to have, options
require_once('settings/config.php');
$options = [
    'AppName'     => $appName,
    '_verbosity'  => '1',
    '_filter'     => ['Uris','ThumbnailUrl','FileName','ImageKey','Serial'],
    '_filteruri'  => ['ImageSizeDetails'],
];
$client = new phpSmug\Client($pubKey);
$albumImagesCount = $client->get('album/' . $albumKey . '?_filter=ImageCount&_verbosity=0&_filteruri=&_shorturis=');
$albumImages = $client->get('album/' . $albumKey . '!images', $options);

$numImgs = $albumImagesCount -> Album -> ImageCount;
$curImg = ($curImg >= $numImgs) ? 0 : $curImg;
$prvImg = ($curImg - 1 < 0) ? $numImgs - 1 : $curImg - 1;
$nxtImg = ($curImg + 1 >= $numImgs) ? 0 : $curImg + 1;

#$url = "https://api.smugmug.com/api/v2/album/ng69j9!images";
// echo "<pre style=\"font-size: 10px; font-family: monospace;\">";
// print_r($albumImages -> AlbumImage[4]);
// echo "</pre>";

function getImage($client, $argImgObj, $argSize = 'LargestImageSize') {
  $imageSizeUri = $argImgObj -> Uris -> ImageSizeDetails;

  # Get whole object so individual sizes can be used if needed, otherwise find it.
  $imageSizes = $client->get($imageSizeUri);
  $imageDetails = $imageSizes -> ImageSizeDetails;

  # if size is in array && not default
  if ($argSize != 'LargestImageSize') {
    $getUsableSizes = $imageDetails -> UsableSizes;
    $usableSize = array_search($argSize, $getUsableSizes);
    # if the size exists, use it, otherwise default to largest
    $getImageSize = ($usableSize != false) ? $getUsableSizes[$usableSize] : $imageDetails -> LargestImageSize;
  } else {
    # if default, find out what the largest size is
    $getImageSize = $imageDetails -> LargestImageSize;
  }
  # Use image size to return url to image
  return $imageDetails -> $getImageSize;
}

?>


<?php
  if ($numImgs > 0):
    $curImgObj = $albumImages -> AlbumImage[$curImg];
    $image = getImage($client, $curImgObj, 'ImageSizeX3Large');
    echo "<figure id=\"current_image\" data-prv=\"" . $prvImg . "\" data-cur=\"" . $curImg . "\" data-nxt=\"" . $nxtImg . "\" data-key=\"" . $curImgObj -> ImageKey . "-" . $curImgObj -> Serial . "\">\n\t<img src=\"" . $image -> Url . "\" alt=\"" . $curImgObj -> FileName . "\">\n</figure>\n";
  ?>
  <?php
/*
  $count = 0;
  $output = "<ul>\n";
  foreach ($albumImages->AlbumImage as $imgObj):
    $image = getImage($client, $imgObj);
    $count++;
    if ($count > $numImgs - 1) break;
    $output .= "\t<li data-key=\"" . $imgObj -> ImageKey . "-" . $imgObj -> Serial . "\"><!--<img src=\"" . $image -> Url . "\" alt=\"" . $imgObj -> FileName . "\">--></li>\n";
  endforeach;
  $output .= "</ul>\n";
  echo $output;
  */
  ?>

<?php endif; ?>
